syntax = "proto3";
option go_package = "grpc";
package applicationGolang;

service Entity {
  rpc GetEntityById(GetEntityByIdRequest) returns (GetEntityByIdResponse) {}
  rpc GetAllEntity(GetAllEntityRequest) returns (GetAllEntityResponse) {}
  rpc UpdateEntity(UpdateEntityRequest) returns(UpdateEntityResponse) {}
  rpc DeleteEntity(DeleteEntityRequest) returns (DeleteEntityResponse) {}
}

service User{

}

service ImageManager{
  rpc GetImageByEasyLink(GetImageByIDRequest) returns (stream GetImageByIDResponse){}
}

message EntityStruct {
  string id = 1;
  string name = 2;
  int32 price = 3;
  bool isActive = 4;
}


message GetEntityByIdRequest {
  string entityId = 1;
}
message GetEntityByIdResponse {
  EntityStruct entity = 1;
}

message GetAllEntityRequest{}
message GetAllEntityResponse{
  repeated EntityStruct entity = 1;
}

message UpdateEntityRequest{
  string id = 1;
  EntityStruct entity = 2;
}
message UpdateEntityResponse{}

message DeleteEntityRequest {
  string entityId = 1;
}
message DeleteEntityResponse{}

message ImageStruct{
  string fileName = 1;
  int32 size = 2;
}

message GetImageByIDRequest{
  string easy_link = 1 ;
}
message GetImageByIDResponse{
  ImageStruct metaData = 1;
  bytes data = 2;
}


